<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Velkommen på 4. semester on 4. Semester - Introduktion til kvantitativ metode</title><link>/</link><description>Recent content in Velkommen på 4. semester on 4. Semester - Introduktion til kvantitativ metode</description><generator>Hugo -- gohugo.io</generator><language>da</language><lastBuildDate>Mon, 20 Dec 2021 08:08:52 +0100</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Visuel beskrivelse af RStudio 1</title><link>/pakker-og-rstudio/visuelr1/</link><pubDate>Mon, 20 Dec 2021 19:08:52 +0100</pubDate><guid>/pakker-og-rstudio/visuelr1/</guid><description>Visuel beskrivelse af RStudio 1 Efter i har installeret RStudio kan i åbne RStudio ved at finde ikonet på skrivebordet eller søge efter det på computeren. Bemærk, at i skal åbne RStudio og IKKE R. Det første vindue i møder ser sådan her ud (bemærk at jeres version er anderledes end nedenstående):
Som RStudio åbner er der sædvanligvis 3 vinduer - men når vi arbejder er der konsekvent 4 vinduer vi interagerer med.</description></item><item><title>Indhold</title><link>/velkommen/indhold/</link><pubDate>Mon, 20 Dec 2021 08:08:52 +0100</pubDate><guid>/velkommen/indhold/</guid><description>Sidens grundlæggende symbolik Siden fungerer som et sted hvor vi præsenterer jer for mange forskellige visuelle virkemidler. Links kan forekomme i teksten, og links vil altid forekomme som tekst i anden farve I kan trykke på. Hvis teksten bliver blå, indikerer det et link.
Der kan også forekomme videoer. Videoer optræder på siden sådan her og kan afspilles direkte fra siden: Der kan også forekomme kode på siden som er designet til at virke i R.</description></item><item><title>Installation på Windows</title><link>/ops%C3%A6tning-af-r/inst_win/</link><pubDate>Mon, 20 Dec 2021 08:08:52 +0100</pubDate><guid>/ops%C3%A6tning-af-r/inst_win/</guid><description>Installation af R og RStudio på Windows Download R For at bruge RStudio bliver vi nødt til at installere R først. R kan installeres ved at gå til siden cran.r-project.org hvor i øverst kan se et link hvor der står &amp;ldquo;Download R for Windows&amp;rdquo;. I bliver ført videre til en side hvor i har flere valgmuligheder - i skal her vælge: &amp;ldquo;base&amp;rdquo;. Øverst på den sidste side skal i trykke på &amp;ldquo;Download R for Windows&amp;rdquo;.</description></item><item><title>Arbejd med statistiske modeller i R</title><link>/statistiske/arbejd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/statistiske/arbejd/</guid><description>Der er to dele i at få resultaterne af en statistisk model frem i R:
Specificér modellen (fx med en funktion som lm() for lineære modeller) Få koefficienter og resultater fra modellen (med brug af funktionen summary()) Specificér modellen R indeholder flere funktioner til at lave statistiske modeller. Hvilken model der skal bruges, afhænger af, hvilken type af statistisk model, som man skal lave.
Funktionen lm() bruges fx til at specificere en lineær model (lineære sammenhænge - fx lineær og multipel lineær regression).</description></item><item><title>Hvad er en factor?</title><link>/kategoriske/hvad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kategoriske/hvad/</guid><description>Factors bruges til eksplicit at fortælle R, at variablen skal behandles som nominal eller ordinal. Ved at konvertere en variabel til en factor, sætter man både begrænsninger for de mulige værdier (denne variabel indeholder kun X værdier), og man fortæller R, hvordan den skal håndtere variablen, når den bruges i en statistisk model.
Factors kan enten være “unordered” eller “ordered”. En “unordered” factor svarer til en nominalskaleret variabel (en variabel uden rangorden), mens en “ordered” factor svarer til en ordinalskaleret variabel (en variabel med rangorden).</description></item><item><title>Hvad er ggplot2?</title><link>/visualisering/hvad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/visualisering/hvad/</guid><description>Pakken ggplot2 er en del af tidyverse og bruges til at lave visualiseringer af data. Funktionerne i ggplot2 gør det muligt at tilpasse nærmest alt, og understøtter mange typer af visualisering.
Herunder ses et eksempel på, hvordan man danner et punktdiagram (scatterplot) i ggplot2:
library(ggplot2) ess18_filt &amp;lt;- ess18 |&amp;gt; # Filtrering af data for at undgå ekstreme værdier filter(grspnum &amp;lt; 200000) # Dan scatterplot ggplot(data = ess18_filt, aes(x = yrbrn, y = grspnum)) + geom_point() Overordnet set fungerer ggplot ved, at man først angiver, hvad der skal visualiseres (data og “aesthetics”), hvorefter man angiver, hvordan det skal visualiseres (“geom”).</description></item><item><title>Hvad er R?</title><link>/basiskoncepter/hvad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/basiskoncepter/hvad/</guid><description>R er et gratis analyseprogram med sit eget kommandosprog.
Programmet egner sig især til kvantiative analyser og visualiseringer af kvantitative data.
R kan arbejde med mange forskellige dataformater. Da programmet er “open source”, findes ufattelig mange udvidelser til programmet, der tilføjer funktioner.
RStudio R i sig selv er meget begrænset. RStudio tilføjer en brugerflade ovenpå R, der gør det rarere at arbejde med.
Man arbejder typisk i RStudio, når man bruger R.</description></item><item><title>Hvornår laver man en ny variabel?</title><link>/rekodning/hvorn%C3%A5r/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rekodning/hvorn%C3%A5r/</guid><description>Når man laver datahåndtering, bør man altid bestræbe sig efter ikke at fjerne information fra datasættet. Når man laver variabelændringer, bør man derfor altid lave en ny variabel, hvis informationen i den oprindleige variabel ændres (fx når man rekoder fra numerisk til kateogriske eller sammenslår kategorier).
Hvis variabelændringer primært går på at rette fejl i variablen, så kan man typisk fint overskrive den oprindelige variabel. Dette kan fx være aktuelt, hvis variabel skal ændres fra tekst til numerisk, eller hvis der skal rettes fejl i kategorinavne.</description></item><item><title>Subset data med tidyverse</title><link>/datah%C3%A5ndtering/subset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/datah%C3%A5ndtering/subset/</guid><description>Med “subsetting” menes at danne et mindre udsnit af data. Dette gøres blandt andet ved at udvælge specifikke rækker og kolonner i data.
tidyverse indeholder funktionerne filter og select, som kan bruges til at subsette data (fra pakken dplyr).
filter() tager et datasæt og kriterier i form af logiske udtryk som argumenter. Funktionen returnerer de rækker, som opfylder kriterierne.
select() tager et datasæt efterfulgt af de variable, som skal bevares som argumenter.</description></item><item><title>Tidyverse</title><link>/datastrukturer/tidyverse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/datastrukturer/tidyverse/</guid><description>Tidyverse](https://www.tidyverse.org/) er en samling af pakker til R, der letter arbejdet med at indlæse, håndtere og arbejde med data.
Pakkerne fra Tidyverse har den fordel, at de alle følger den samme designfilosofi og opbygning i deres funktioner.
Vi vil i dette materiale primært bruge funktioner fra tidyverse til data- og variabelhåndtering. Inden du fortsætter kan du derfor med fordel installere denne pakkesamling.
Installation og brug af tidyverse
Alle pakker i tidyverse kan installeres med følgende kommando:</description></item><item><title>Visuel beskrivelse af RStudio 2</title><link>/pakker-og-rstudio/visuelr2/</link><pubDate>Mon, 20 Dec 2021 19:08:52 +0100</pubDate><guid>/pakker-og-rstudio/visuelr2/</guid><description>Visuel beskrivelse af RStudio 2 Måden vi interagerer med RStudio på er via scripts. I kan åbne et nyt script ved at gå i menuen &amp;ldquo;File&amp;rdquo;, trykke på &amp;ldquo;New File&amp;rdquo; og vælge &amp;ldquo;New R script&amp;rdquo;. Når i trykker på dette åbner RStudio et 4. vindue der ser sådan ud:
&amp;ldquo;Source&amp;rdquo; er en måde at skrive, at det er her RStudio læser kode fra, som den efterfølgende skriver output til i konsollen nedenfor.</description></item><item><title>Installation på Mac</title><link>/ops%C3%A6tning-af-r/inst_mac/</link><pubDate>Mon, 20 Dec 2021 08:08:52 +0100</pubDate><guid>/ops%C3%A6tning-af-r/inst_mac/</guid><description>Installation af R og RStudio på Mac Download R For at bruge RStudio bliver vi nødt til at installere R først. R kan installeres ved at gå til siden cran.r-project.org hvor i øverst kan se et link hvor der står &amp;ldquo;Download R for macOS&amp;rdquo;. Mac-brugere skal være opmærksom på, hvilken version af deres styresystem de har. Den nyeste version af R fungerer udelukkende på styresystemer 10.13 og op - det styresystem hedder &amp;ldquo;High Sierra&amp;rdquo;.</description></item><item><title>Læringsmål</title><link>/velkommen/l%C3%A6ringsm%C3%A5l/</link><pubDate>Mon, 20 Dec 2021 08:08:52 +0100</pubDate><guid>/velkommen/l%C3%A6ringsm%C3%A5l/</guid><description>Læringsmål På de næste sider kan du læse om læringsmålene for kurset. De er delt op i: &amp;ldquo;Viden&amp;rdquo;, &amp;ldquo;Færdigheder&amp;rdquo; og &amp;ldquo;Kompetencer&amp;rdquo;. Hver sektion beskriver de elementer i skal lære gennem kurset og hvad vi forventer i er i stand til, når kurset er overstået.</description></item><item><title>“Ordered” og “unordered” factors</title><link>/kategoriske/ordered/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kategoriske/ordered/</guid><description>En factor vil som standard blive sat til “unordered” (nominalskaleret). Dette kan ændres ved at bruge funktionen factor() sammen med ordered = argumentet. Hvor as.factor() bruges til at konvertere værdierne i en variabel til ikke-rangordnede kategorier, så bruges factor() både til at styre hvilke kategorier, der skal indgå i factoren samt til at styre, om den skal være rangordnet eller ej.
Herunder omdannes health-variablen (selvvurderet helbred) til en rangordnet factor, uden rækkefølgen specificeres:</description></item><item><title>Ændring af variabeltype (class)</title><link>/rekodning/%C3%A6ndring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rekodning/%C3%A6ndring/</guid><description>Som nævnt tidligere, adskiller R mellem objekter via deres “class”.
Enkelte variable(/vectors) kan kun indeholde værdier med samme class. Funktionen class() virker derfor også på variable.
Variablen tygrtr (i hvilken alder er man for ung til at gå på pension) ligner en variabel, der bør indeholde numeriske værdier (en alder). Ser vi nærmere på variablen, kan vi dog se, at den også indeholder tekst-værdier:
head(ess18$tygrtr) [1] &amp;quot;60&amp;quot; &amp;quot;40&amp;quot; &amp;quot;55&amp;quot; &amp;quot;64&amp;quot; &amp;quot;50&amp;quot; &amp;quot;60&amp;quot; Undersøger vi variablens class, kan vi se, at variablen er lagret som tekst (en string).</description></item><item><title>Andre plots/geoms (histogram og boxplot)</title><link>/visualisering/andre/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/visualisering/andre/</guid><description>Fordi data, som skal visualiseres (data, aesthetics), specificeres inden typen af visualiering (geom), kan man nemt udskifte denne:
# histogram over månedlig ggplot(data = ess18_filt, aes(x = grspnum)) + geom_histogram() # boxplot of monthly income - only geom is changed ggplot(data = ess18_filt, aes(x = grspnum)) + geom_boxplot() Bemærk at første linje af kodestykkerne til at lave de to plots er identiske. Det eneste, som skiftes ud, er geom-funktionen.</description></item><item><title>Indlæsning af data</title><link>/datastrukturer/indl%C3%A6sning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/datastrukturer/indl%C3%A6sning/</guid><description>I koden herunder indlæses data fra en csv-fil og gemmes i objektet ess18:
library(tidyverse) ess18 &amp;lt;- read_csv(&amp;#34;https://github.com/RolfLund/4semesterR/raw/master/teaching-materials/r-intro/datasets/ESS2018DK_subset.csv&amp;#34;) read_csv er en del af tidyverse (mere specifikt pakken readr).
R har også en basisfunktion til at indlæse csv-filer (read.csv), men read_csv er mere effektiv.
Indlæsning med peg og klik Data kan også indlæses med peg-og-klik under “File”-&amp;gt;“Import dataset”. Her hjælper RStudio med importen af data:
Data brugt i undervisningen: European Social Survey 2018 Til R introduktionerne bruger vi et udsnit af European Social Survey fra 2018 (https://www.</description></item><item><title>Kategoriske variable (factors) i modeller</title><link>/statistiske/kategoriske/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/statistiske/kategoriske/</guid><description>Som standard vil R behandle tekstvariable som unordered factors; altså nominalt skalerede variable.
I nedenstående tilføjes variablen vote (hvorvidt man stemte til sidste folketingsvalg) til modellen fra tidligere. vote er ikke kodet til factor:
grsp_vote_model &amp;lt;- lm(grspnum ~ eduyrs + wkhtot + vote, data = ess18) summary(grsp_vote_model) Call: lm(formula = grspnum ~ eduyrs + wkhtot + vote, data = ess18) Residuals: Min 1Q Median 3Q Max -62657 -17091 -10043 -1996 2954310 Coefficients: Estimate Std.</description></item><item><title>Udvælg rækker med filter</title><link>/datah%C3%A5ndtering/udv%C3%A6lg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/datah%C3%A5ndtering/udv%C3%A6lg/</guid><description>filter` funktionen tager mindst to input: et datasæt (en dataframe) og et kriterie.
library(tidyverse) ess18_male &amp;lt;- filter(ess18, gndr == &amp;#39;Male&amp;#39;) # Subset kun med mænd head(ess18_male) # A tibble: 6 × 17 idno netustm ppltrst vote prtvtddk health lvpntyr tygrtr gndr yrbrn edlvddk &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; 1 5816 90 7 Yes SF Soci… Good 1994 60 Male 1974 Mellem… 2 7887 360 8 Yes Sociald… Fair 1983 55 Male 1958 Lang v… 3 12355 120 5 Yes Sociald… Fair 1987 60 Male 1963 Faglig… 4 16357 488 5 Yes Dansk F… Very … 2013 50 Male 1991 Mellem… 5 20724 60 5 Yes Venstre… Good 1981 Never… Male 1958 Faglig… 6 24928 120 8 Yes Venstre… Very … 1984 Shoul… Male 1965 Mellem… # … with 6 more variables: eduyrs &amp;lt;dbl&amp;gt;, wkhct &amp;lt;dbl&amp;gt;, wkhtot &amp;lt;dbl&amp;gt;, # grspnum &amp;lt;dbl&amp;gt;, frlgrsp &amp;lt;dbl&amp;gt;, inwtm &amp;lt;dbl&amp;gt; ess18_edusub &amp;lt;- filter(ess18, eduyrs &amp;gt; 15) # Subset med folk med mere end 15 års uddannelse head(ess18_edusub) # A tibble: 6 × 17 idno netustm ppltrst vote prtvtddk health lvpntyr tygrtr gndr yrbrn edlvddk &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; 1 5816 90 7 Yes SF Soci… Good 1994 60 Male 1974 Mellem… 2 7887 360 8 Yes Sociald… Fair 1983 55 Male 1958 Lang v… 3 19970 240 9 Yes Liberal… Very … 1984 60 Fema… 1966 Lang v… 4 22248 121 9 Yes Sociald… Good 1970 Never… Fema… 1950 Mellem… 5 24928 120 8 Yes Venstre… Very … 1984 Shoul… Male 1965 Mellem… 6 27211 120 7 Yes Kristen… Fair 1983 60 Male 1969 Mellem… # … with 6 more variables: eduyrs &amp;lt;dbl&amp;gt;, wkhct &amp;lt;dbl&amp;gt;, wkhtot &amp;lt;dbl&amp;gt;, # grspnum &amp;lt;dbl&amp;gt;, frlgrsp &amp;lt;dbl&amp;gt;, inwtm &amp;lt;dbl&amp;gt; Bemærk!</description></item><item><title>Pakker</title><link>/pakker-og-rstudio/pakker/</link><pubDate>Mon, 20 Dec 2021 19:08:52 +0100</pubDate><guid>/pakker-og-rstudio/pakker/</guid><description>Hvad er pakker? R er anderledes end de programmer i normalt bruger på jeres computer. Når i åbner Word, Excel, Chrome, Firefox eller måske Sims, så er antagelsen at &amp;ldquo;hele&amp;rdquo; programmet er der per automatik. Vi behøver ikke nødvendigvis installere ekstra ting for, at det virker som det skal. Nogle gange henter vi et tilføjelsesprogram som f.eks. add-blocker eller en mod til et spil der gør oplevelsen en lille smule bedre, men for det meste er grundessensen af programmet der ved installation.</description></item><item><title>Viden</title><link>/velkommen/viden/</link><pubDate>Mon, 20 Dec 2021 08:08:52 +0100</pubDate><guid>/velkommen/viden/</guid><description>Viden Viden om grundlæggende datatyper og variable (f.eks. heltal, float, karakter/tekststrenge)
Viden om grundlæggende datastrukturer (f.eks. lister, arrays og sammensatte datastrukturer)
Viden om simple kontrolstrukturer såvel selektive som iterative (f.eks. if-else-sætninger, for/while loops)
Viden om funktioner til håndtering, kombination og manipulation af datastrukturer
Viden om sandsynlighedsfordelinger og principper for statistisk inferens via den centrale grænseværdisætning
Viden om grundlæggende beskrivende statistiske mål (f.eks. gennemsnit, median, spredning, standardafvigelse, min og max, rækkevidde)</description></item><item><title>Data Frames (Tabeldata i R)</title><link>/datastrukturer/data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/datastrukturer/data/</guid><description>ess18er nu et objekt, der indeholder et datasæt. Bemærk at måden vi danner objektet ikke er anderledes end andre måder, som vi har dannet objekter:objectname &amp;lt;- somefunction(something)`.
ess18 er en “data frame”. En “data frame” er måden R lagrer tabeldata (data struktureret i rækker og kolonner).
Udforskning af data frames For at få et overblik over data, kan man bruge funktionen head():
head(ess18) # A tibble: 6 × 17 idno netustm ppltrst vote prtvtddk health lvpntyr tygrtr gndr yrbrn edlvddk &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; 1 5816 90 7 Yes SF Soci… Good 1994 60 Male 1974 Mellem… 2 7251 300 5 Yes Dansk F… Fair 1993 40 Fema… 1975 Faglig… 3 7887 360 8 Yes Sociald… Fair 1983 55 Male 1958 Lang v… 4 9607 540 9 Yes Alterna… Good 1982 64 Fema… 1964 Mellem… 5 11688 NA 5 Yes Sociald… Very … 1968 50 Fema… 1952 Faglig… 6 12355 120 5 Yes Sociald… Fair 1987 60 Male 1963 Faglig… # … with 6 more variables: eduyrs &amp;lt;dbl&amp;gt;, wkhct &amp;lt;dbl&amp;gt;, wkhtot &amp;lt;dbl&amp;gt;, # grspnum &amp;lt;dbl&amp;gt;, frlgrsp &amp;lt;dbl&amp;gt;, inwtm &amp;lt;dbl&amp;gt; head() viser de første seks rækker af data, og er god til at tjekke, om data ser ud, som det skal.</description></item><item><title>Håndtering af missingværdier</title><link>/datah%C3%A5ndtering/h%C3%A5ndtering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/datah%C3%A5ndtering/h%C3%A5ndtering/</guid><description>Missingværdier er angivet med NA i R.
Som vist ved beregning af deskriptive mål (middelværdi, standardafvigelse osv.), så kan R ikke lave beregninger på missingværdier. Ved nogle beregninger frasorterer R missingværdierne automatisk inden beregning, men andre gange skal man selv specificerer, hvad der skal ske med missingværdierne.
Man har derfor typisk brug for at kunne identificere hvilke værdier i datasættet, der er missing. NA er dog en speciel værdi, så den kan ikke bruges i et filter på samme måde som andre værdier.</description></item><item><title>Labels i en factor</title><link>/kategoriske/labels/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kategoriske/labels/</guid><description>factor()funktionen har også etlabelsargument. Denne bruges til at angive, hvad værdierne i factoren skal hedde. Som standard antager R, atlabelsskal være det samme somlevels`, men man kan vælge at specificere andre labels. Disse skal så angives i samme rækkefølge som labels:
ess18n &amp;lt;- ess18 |&amp;gt; mutate(health_r = factor(health, levels = c(&amp;#39;Very bad&amp;#39;, &amp;#39;Bad&amp;#39;, &amp;#39;Fair&amp;#39;, &amp;#39;Good&amp;#39;, &amp;#39;Very good&amp;#39;), labels = c(&amp;#39;Meget dårligt&amp;#39;, &amp;#39;Dårligt&amp;#39;, &amp;#39;Jævnt&amp;#39;, &amp;#39;Godt&amp;#39;, &amp;#39;Meget godt&amp;#39;), ordered = TRUE)) unique(ess18n$health_r) [1] Godt Jævnt Meget dårligt Meget godt Dårligt [6] &amp;lt;NA&amp;gt; Levels: Meget dårligt &amp;lt; Dårligt &amp;lt; Jævnt &amp;lt; Godt &amp;lt; Meget godt At specificere labels er principielt en rekodning af værdierne.</description></item><item><title>Objekter</title><link>/basiskoncepter/objekter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/basiskoncepter/objekter/</guid><description>At arbejde med R involverer kontinuerligt at definere objekter. Objekter er blot et navn til at kalde lagret information frem igen.
Objekter kan være mange ting: h * et ord * et tal * en talrække * et datasæt * en matematisk formel * et resultat * en filsti * en graf * og så videre…
Når et objekt er defineret, er det tilgængeligt i det aktuelle arbejdsmiljø (dvs.: tilgængeligt indtil vi starter en ny R session eller fjerner det igen).</description></item><item><title>Output af model (med `stargazer`)</title><link>/statistiske/output/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/statistiske/output/</guid><description>Outputtet af en model i R konsollen er ikke kønt og egner sig dårligt til at fremstille. Der findes dog en række måder at lave pæne outputs af modeller fra R. En god pakke til dette er pakken stargazer (https://cran.r-project.org/web/packages/stargazer/stargazer.pdf).
stargazer kan tage forskellige R objekter (herunder modeller) og lave op til outputs, hvor de enkelte dele kan tilpasses. stargazer tillader bl.a. at eksportere output fra en statistisk model til en HTML-fil.</description></item><item><title>Rekodning af kategoriske variable</title><link>/rekodning/rekodning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rekodning/rekodning/</guid><description>Vi har tidligere set på hvordan variable kan dannes eller rekodes fra eksisterende variable med brug af simple omregninger (fx inwtm / 60 for at få interviewtid i timer).
Rekodning af kategoriske data må gøres anderledes. Her står man typisk enten over for at skulle ændre kategorierne, slå kategorier sammen eller danne kategorier ud fra nogle betingelser (fx hvis man skal lave en intervalskaleret variabel om til kategorisk).
tidyverse (pakken dplyr) har en række funktioner til rekodning af kategoriske værdier.</description></item><item><title>Undersøg lineær sammenhæng</title><link>/visualisering/unders%C3%B8g/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/visualisering/unders%C3%B8g/</guid><description>Ved at kombinere et scatterplot med et plot, der fitter en linje til at passe på data (geom_smooth) kan man visuelt inspicere den umiddelbare sammenhæng mellem to variable.
geom_smooth har et method argument, hvor man angiver, hvordan linjen skal fittes. method = &amp;quot;lm&amp;quot; fitter den bedste rette linje mellem x og y:
ggplot(data = ess18_filt, aes(x = yrbrn, y = grspnum)) + geom_point() + geom_smooth(method = &amp;#34;lm&amp;#34;) Som standard fittes linjen med et 95% konfidensinterval for linjen.</description></item><item><title>Færdigheder</title><link>/velkommen/f%C3%A6rdigheder/</link><pubDate>Mon, 20 Dec 2021 08:08:52 +0100</pubDate><guid>/velkommen/f%C3%A6rdigheder/</guid><description>Færdigheder Kan indlæse og bearbejde data i et statistikprogram med henblik på at gennemføre multivariate statistiske analyser Kan aflæse og forstå tabeller der anvender såvel beskrivende statistiske mål som mål for statistiske sammenhænge mellem to og flere variable (f.eks. krydstabeller, lineær regression mm). Kan udvælge og argumentere for brugen af relevante kvantitative metoder til analyse af uni-, bi- og multivariable sammenhænge mellem to eller flere variable Kan kritisk vurdere og formidle centrale elementer af en konkret statistisk analyse herunder dets muligheder og begrænsninger Kan anvende og selvstændigt gennemføre en simpel multivariable analyse ved hjælp af kvantitative metoder i et statistikprogram</description></item><item><title>Enkeltvarialbe (vectors)</title><link>/datastrukturer/enkeltvarialbe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/datastrukturer/enkeltvarialbe/</guid><description>En basal datastruktur i R er en vector.
En vector er en række af værdier af den samme type (fx en række tal, en række ord osv.).
En vector svarer til en enkelt variabel/kolonne i en dataframe, og man arbejder med vectors på samme måde, som man arbejder med enkelte kolonner (samme funktioner kan bruges).
Vectors dukker op i mange forskellige sammenhænge i R, da de bruges hver gang, at man skal specificere en samling af flere værdier.</description></item><item><title>Funktioner</title><link>/basiskoncepter/funktioner/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/basiskoncepter/funktioner/</guid><description>Funktioner er kommandoer brugt til at transformere objektet på en måde og give et output.
Det, som man sætter i funktionen, kaldes et “argument” eller “input”. Antallet af argumenter varierer mellem funktioner.
Funktioner har alle den samme opbygning: funktionsnavn(arg1, arg2, arg3). (funktionsnavn med argumenterne i parentes adskilt med kommaer).
Nogle argumenter er krævet, mens andre er valgfrie.
Eksempler på funktioner Gør tekst til blokbogstaver:
name &amp;lt;- &amp;#39;kilmister&amp;#39; toupper(name) [1] &amp;quot;KILMISTER&amp;quot; Erstat bogstaver i tekst:</description></item><item><title>Kombinér datahåndteringsfunktioner med pipe (|>)</title><link>/datah%C3%A5ndtering/kombin%C3%A9r/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/datah%C3%A5ndtering/kombin%C3%A9r/</guid><description>Det bliver hurtigt omstændeligt at foretage flere datahåndteringsoperationer, hvis man skal specificere navnet på datasættet hver gang. Dette kan forsimples ved brug af “pipe”-operatoren (|&amp;gt;).
Et “pipe” fungerer kort sagt ved at erstatte det første argument i funktionen til højre for pipet med outputtet på venstre side af pipet (typisk opbrudt med linjeskift for at gøre det nemmere at læse).
Man bruger for det meste pipe i forbindelse med datahåndtering, da man på den måde undgår at skulle lave midlertidige data frame objekter undervejs, men blot kan sammenkæde datahåndteringer i et langt pipe.</description></item><item><title>Rekodning af enkelte kategorier (recode)</title><link>/rekodning/rekodning1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rekodning/rekodning1/</guid><description>Funktionen recode() tager mindst to input:
Variabel der skal rekodes Værdi der skal ændres (i format [gammel] = [ny]) Herunder bruges recode() til at ændre kategorierne for køn til dansk: ess18n &amp;lt;- ess18 |&amp;gt; mutate(gndr_da = recode(gndr, &amp;#39;Male&amp;#39; = &amp;#39;Mand&amp;#39;, &amp;#39;Female&amp;#39; = &amp;#39;Kvinde&amp;#39;)) |&amp;gt; select(idno, gndr, gndr_da) # Variable udvælges for nemmere at kunne se forskel head(ess18n) # A tibble: 6 × 3 idno gndr gndr_da &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; 1 5816 Male Mand 2 7251 Female Kvinde 3 7887 Male Mand 4 9607 Female Kvinde 5 11688 Female Kvinde 6 12355 Male Mand Ved brug af .</description></item><item><title>Tilpasning af ggplot</title><link>/visualisering/tilpasning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/visualisering/tilpasning/</guid><description>Et ggplot kan tilpasses på mange forskellige måder. Her gennemgås nogen af de mere simple ændringer og tilføjelser.
Mærkater Man kan sætte mærkater (for akser, tegnforklaring osv.) med funktionen labs. labs har argumenter, der tilsvarer de forskellige aesthetics. Man sætter derfor mærkat for et aesthetic, ved at referere til dette i funktionen:
ggplot(data = ess18_filt, mapping = aes(x = eduyrs, y = grspnum, colour = gndr, size = netustm)) + geom_point() + labs(x = &amp;#39;Years of education&amp;#39;, y = &amp;#39;Usually monthly gross pay&amp;#39;, colour = &amp;#39;Gender&amp;#39;, size = &amp;#39;Time spent on internet per day&amp;#39;) Titel Man kan tilføje en titel med enten ggtitle() eller med labs().</description></item><item><title>Mapper og stier</title><link>/pakker-og-rstudio/stier/mapper-og-stier/</link><pubDate>Mon, 20 Dec 2021 19:08:52 +0100</pubDate><guid>/pakker-og-rstudio/stier/mapper-og-stier/</guid><description>Vi laver en mappe R, om det er på Windows eller Mac, har samme måde den forstår hvor filer ligger. Generelt er det en fordel at have styr på, hvor i placerer jeres data når i får det udleveret, før i giver jer til at specificere noget i R. Som eksempel kan i starte med at lave en mappe på jeres skrivebord eller et andet sted på jeres computer, hvor i plejer at ligge jeres undervisningsmateriale.</description></item><item><title>Kompetencer</title><link>/velkommen/kompetencer/</link><pubDate>Mon, 20 Dec 2021 08:08:52 +0100</pubDate><guid>/velkommen/kompetencer/</guid><description>Kompetencer Har evnen til at indhente og forstå/fortolke på sekundære statistiske analyser og tabeller med henblik på videre bearbejdning og en forståelse af den potentielle bias/problematik ved analysen På selvstændigt grundlag kunne gennemføre en statistisk analyse af en sociologisk problemstilling herunder vurdere relevansen af dens anvendelse På selvstændigt grundlag kan reflektere over centrale problemstillin-ger inden for anvendelsen af grundlæggende kvantitative metoder i sociologien Har evnen til at udvælge, belyse, diskutere og analysere problemstillinger med inddragelse af kvantitativ metode Har evnen til at identificere og diskutere udfordringer og løsninger i arbejdet med dataudforskningsteknikker og kvantitativ metode</description></item><item><title>Classes</title><link>/basiskoncepter/classes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/basiskoncepter/classes/</guid><description>R adskiller mellem objekter via deres “class”.
Funktionen class() bruges til at tjekke hvilken “class” objektet har:
name = &amp;#34;keenan&amp;#34; year = 1964 class(name) [1] &amp;quot;character&amp;quot; class(year) [1] &amp;quot;numeric&amp;quot; Talværdier tilskrives typisk class numeric, mens tekst tilskrives character. Tekstværdier omtales mere generelt som “strings” i programmeringssammenhænge (også i R).
En “class” er R’s måde at holde styr på, hvilken type af information, som objektet indeholder. Samtidig sætter class betingelserne for, hvad der kan lade sig gøre med objektet (fx at vi kan lave udregninger med tal, men at vi ikke kan det med tekst).</description></item><item><title>Deskriptive mål</title><link>/datastrukturer/deskriptive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/datastrukturer/deskriptive/</guid><description>R indeholder en række funktioner til at regne specifikke deskriptive mål, fx min() (minimum), max() (maksimum), mean() (middelværdi), sd() (standardafvigelse) og length() (antal værdier/rækker).
min(ess18$yrbrn) # Mindste værdi [1] 1929 max(ess18$yrbrn) # Største værdi [1] 2003 mean(ess18$yrbrn) # Middelværdi [1] 1967.047 sd(ess18$yrbrn) # Standardafvigelse [1] 18.29441 length(ess18$yrbrn) # Antal værdier i variabel (svarer til antal rækker) [1] 1285 Husk at vi med R kan lagre hvad som helst som et objekt.</description></item><item><title>Rekodning baseret på enkelt betingelse (if_else/ifelse)</title><link>/rekodning/rekodning2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rekodning/rekodning2/</guid><description>Funktionen ifelse() bruges til at rekode værdier baseret på ét logisk udtryk.
Opbygningen er: ifelse([logisk udtryk], [værdi for sandt], [værdi for falsk])
ess18n &amp;lt;- ess18 |&amp;gt; mutate(health_r = factor(health, levels = c(&amp;#39;Very bad&amp;#39;, &amp;#39;Bad&amp;#39;, &amp;#39;Fair&amp;#39;, &amp;#39;Good&amp;#39;, &amp;#39;Very good&amp;#39;), ordered = TRUE)) |&amp;gt; mutate(healthdum = ifelse(health_r &amp;lt;= &amp;#39;Fair&amp;#39;, &amp;#39;Not good&amp;#39;, &amp;#39;Good&amp;#39;)) |&amp;gt; select(idno, health_r, healthdum) head(ess18n) # A tibble: 6 × 3 idno health_r healthdum &amp;lt;dbl&amp;gt; &amp;lt;ord&amp;gt; &amp;lt;chr&amp;gt; 1 5816 Good Good 2 7251 Fair Not good 3 7887 Fair Not good 4 9607 Good Good 5 11688 Very bad Not good 6 12355 Fair Not good Rekod flere værdier med %in% %in% er et basisudtryk i R, der bruges til at spørge “er denne værdi i denne samling af værdier”?</description></item><item><title>Variabelændringer med mutate</title><link>/datah%C3%A5ndtering/variabel%C3%A6ndringer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/datah%C3%A5ndtering/variabel%C3%A6ndringer/</guid><description>En væsentlig del af datahåndtering er at foretage forskellige variabelændringer - enten i form af at rekode værdier i en variabel eller ved at danne nye variable, som gør brug af informaiton fra andre variable.
I tidyverse bruges funktionen mutate til at foretage variabelændringer - uanset om der er tale om nye variable eller ændring af eksisterende (rekodning).
Dan ny variabel med mutate
Funktionen mutate() fra tidyverse (pakken dplyr) bruges til at foretage variabelændringer (rekodning samt danne nye variable.</description></item><item><title>Stier i R-studio</title><link>/pakker-og-rstudio/stier/stier-i-r_studio/</link><pubDate>Mon, 20 Dec 2021 19:08:52 +0100</pubDate><guid>/pakker-og-rstudio/stier/stier-i-r_studio/</guid><description>Hvordan refererer vi til stier? Hvis i sidder på en Windows-computer og forsøger manuelt at gøre det første i denne beskrivelse vil i opleve, at i nok får en fejl. Lad derfor være med at manuelt begynde at kopiere stier endnu, men følg guiden som den skrider fremad. Hvis i senere manuelt vil kopiere en sti (når i ved hvor de er), så se punktet: &amp;ldquo;Skråstregerne vender forkert?&amp;rdquo; under &amp;ldquo;Troubleshooting&amp;rdquo;.</description></item><item><title>Logiske udtryk</title><link>/basiskoncepter/logiske/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/basiskoncepter/logiske/</guid><description>I R har man ofte brug for at formulere “logiske udtryk”. Logiske udtryk er kommandoer, som altid returnere logiske værdier. Disse er altid enten TRUE eller FALSE (eller NA).
En række operationer i R returnerer altid logiske værdier:
&amp;gt; &amp;gt;= &amp;lt; &amp;lt;= == != Disse bruges blandt til at filtrere data, sætte betingelser for funktioner og lignende. Logiske udtryk kaldes også for “booleans” eller “boolean values” på engelsk
BEMÆRK: Logiske udtryk har også sin egen class:</description></item><item><title>Missing-værdier</title><link>/datastrukturer/missing-v%C3%A6rdier/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/datastrukturer/missing-v%C3%A6rdier/</guid><description>Data vil ofte indeholde missing-værdier. Missing-værdier angiver ikke-gyldige værdier; fx et manglende svar, ugyldigt svar, information der ikke kunne skaffes eller lignende.
Missing-værdier bruges til at give en værdi uden at give en værdi (cellerne skal indeholde noget). Missing-værdier angives som NA i R.
BEMÆRK: Det er ikke givet at missing-værdier er kodet som missing på forhånd i et datasæt. Hvordan missing-værdier kodes varierer mellem programmer. Derfor bruger man ofte specifikke talværdier (fx 777777 eller 888888) til at indikere missing-værdier.</description></item><item><title>Rekodning baseret på flere udtryk (case_when)</title><link>/rekodning/rekodning3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rekodning/rekodning3/</guid><description>Man kan bruge case_when() at rekode baseret på flere logiske udtryk. For hvert udtryk bruges ~ efterfulgt af en værdi for at angive, hvilken værdi observationerne, der opfylder betiungelsen, skal have. Hvert logisk udtryk adskilles med komma:
nyvar = case_when( betingelse1 ~ &amp;#39;kategori 1&amp;#39;, betingelse2 ~ &amp;#39;kategori 2&amp;#39;, betingelse3 ~ &amp;#39;kategori 3&amp;#39; ) Herunder dannes en kategorisering af selvangivet arbejdstid om ugen (wkhtot), hvor respondenter inddeles efter, hvorvidt de arbejder mindre end 37 timer, 37 timer eller mere end 37 timer om ugen:</description></item><item><title>Hvorfor stier?</title><link>/pakker-og-rstudio/stier/hvorfor-stier/</link><pubDate>Mon, 20 Dec 2021 19:08:52 +0100</pubDate><guid>/pakker-og-rstudio/stier/hvorfor-stier/</guid><description>Det smarte ved stier Et spørgsmål man ofte kunne have på dette tidspunkt er, hvorfor er stier smart? Og hvorfor er det vi i det hele taget skal døje med det? Det smarte ved stier og særligt ved &amp;ldquo;working directory&amp;rdquo; er, at vi nu kan referere meget nemt til de filer der eksisterer i vores working directory. I mit eksempel tidligere, fik jeg sat mappen: &amp;ldquo;Eksempel_mappe&amp;rdquo; som mit working directory. Det betyder, at jeg nu nemt kan bede R om at åbne filer fra den mappe, fordi det er her R &amp;ldquo;kigger&amp;rdquo;.</description></item><item><title>R Libraries (pakker)</title><link>/basiskoncepter/r/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/basiskoncepter/r/</guid><description>Fordi R er “open source”, bliver der konstant tilføjet nye funktioner til R. Funktioner, som andre har lavet, kan læses ind via “R pakker”, som kan gøres til del af ens “R bibliotek”.
Alle kommandoer indtil videre har været del af base pakken (del af R fra starten).
Pakker kan installeres enten gennem konsolen eller gennem peg-og-klik.
R adskiller mellem installation og indlæsning. Dette for at undgå konflikter mellem pakker.</description></item><item><title>Praktisk i R</title><link>/pakker-og-rstudio/stier/praktisk-i-r/</link><pubDate>Mon, 20 Dec 2021 19:08:52 +0100</pubDate><guid>/pakker-og-rstudio/stier/praktisk-i-r/</guid><description>Hvad gør vi i praksis? Fordelen ved at vælge working directory gennem menuerne i R er, at vi kan reproducere det i vores script. Kommandoen setwd() bliver genereret når vi er gået igennem menuerne og det kan tilføjes vores script. Output i mit eksempel er som nedenfor:
Hvis man skal bruge det aktivt i sit script kan man kopiere det output ind i ens script sådan at man fremadrettet ikke skal definere et nyt working directory indtil man har brug for at starte et nyt projekt med en ny mappe.</description></item><item><title>Brug af hjælpe-funktionen</title><link>/basiskoncepter/brug/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/basiskoncepter/brug/</guid><description>Alle R funktioner og kommandoer er dokumenteret, så du behøver ikke at huske hvordan hver enkelt funktion fungerer.
Alle funktioner har sin egen “hjælpefil”. Hjælpefilen beskriver hvordan funktionen bruges, og hvad de forskellige argumenter gør.
Man åbner hjælpefilen for en funktion ved at skrive ? foran.</description></item><item><title>Troubleshooting</title><link>/pakker-og-rstudio/stier/troubleshooting/</link><pubDate>Mon, 20 Dec 2021 19:08:52 +0100</pubDate><guid>/pakker-og-rstudio/stier/troubleshooting/</guid><description>Hvad er de ting der ofte går galt? Når det kommer til stier og særligt stier på jeres lokale computere, er der ting der kan gå galt. Her er en lille liste af ting som i kan forsøge, hvis i støder ind i udfordringer.
Skråstregerne vender forkert? Det med skråstreger er forskelligt fra Mac til Windows. Windows bruger generelt backslash \ i stier mens Mac bruger forward slash /. Hvis i bemærker det, så laver R-studio det om for Windows-brugerne, men hvorfor?</description></item></channel></rss>