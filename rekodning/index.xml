<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rekodning i R on 4. Semester - Introduktion til kvantitativ metode</title><link>/rekodning/</link><description>Recent content in Rekodning i R on 4. Semester - Introduktion til kvantitativ metode</description><generator>Hugo -- gohugo.io</generator><language>da</language><atom:link href="/rekodning/index.xml" rel="self" type="application/rss+xml"/><item><title>Hvornår laver man en ny variabel?</title><link>/rekodning/hvorn%C3%A5r/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rekodning/hvorn%C3%A5r/</guid><description>Når man laver datahåndtering, bør man altid bestræbe sig efter ikke at fjerne information fra datasættet. Når man laver variabelændringer, bør man derfor altid lave en ny variabel, hvis informationen i den oprindleige variabel ændres (fx når man rekoder fra numerisk til kateogriske eller sammenslår kategorier).
Hvis variabelændringer primært går på at rette fejl i variablen, så kan man typisk fint overskrive den oprindelige variabel. Dette kan fx være aktuelt, hvis variabel skal ændres fra tekst til numerisk, eller hvis der skal rettes fejl i kategorinavne.</description></item><item><title>Ændring af variabeltype (class)</title><link>/rekodning/%C3%A6ndring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rekodning/%C3%A6ndring/</guid><description>Som nævnt tidligere, adskiller R mellem objekter via deres “class”.
Enkelte variable(/vectors) kan kun indeholde værdier med samme class. Funktionen class() virker derfor også på variable.
Variablen tygrtr (i hvilken alder er man for ung til at gå på pension) ligner en variabel, der bør indeholde numeriske værdier (en alder). Ser vi nærmere på variablen, kan vi dog se, at den også indeholder tekst-værdier:
head(ess18$tygrtr) [1] &amp;quot;60&amp;quot; &amp;quot;40&amp;quot; &amp;quot;55&amp;quot; &amp;quot;64&amp;quot; &amp;quot;50&amp;quot; &amp;quot;60&amp;quot; Undersøger vi variablens class, kan vi se, at variablen er lagret som tekst (en string).</description></item><item><title>Rekodning af kategoriske variable</title><link>/rekodning/rekodning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rekodning/rekodning/</guid><description>Vi har tidligere set på hvordan variable kan dannes eller rekodes fra eksisterende variable med brug af simple omregninger (fx inwtm / 60 for at få interviewtid i timer).
Rekodning af kategoriske data må gøres anderledes. Her står man typisk enten over for at skulle ændre kategorierne, slå kategorier sammen eller danne kategorier ud fra nogle betingelser (fx hvis man skal lave en intervalskaleret variabel om til kategorisk).
tidyverse (pakken dplyr) har en række funktioner til rekodning af kategoriske værdier.</description></item><item><title>Rekodning af enkelte kategorier (recode)</title><link>/rekodning/rekodning1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rekodning/rekodning1/</guid><description>Funktionen recode() tager mindst to input:
Variabel der skal rekodes Værdi der skal ændres (i format [gammel] = [ny]) Herunder bruges recode() til at ændre kategorierne for køn til dansk: ess18n &amp;lt;- ess18 |&amp;gt; mutate(gndr_da = recode(gndr, &amp;#39;Male&amp;#39; = &amp;#39;Mand&amp;#39;, &amp;#39;Female&amp;#39; = &amp;#39;Kvinde&amp;#39;)) |&amp;gt; select(idno, gndr, gndr_da) # Variable udvælges for nemmere at kunne se forskel head(ess18n) # A tibble: 6 × 3 idno gndr gndr_da &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; 1 5816 Male Mand 2 7251 Female Kvinde 3 7887 Male Mand 4 9607 Female Kvinde 5 11688 Female Kvinde 6 12355 Male Mand Ved brug af .</description></item><item><title>Rekodning baseret på enkelt betingelse (if_else/ifelse)</title><link>/rekodning/rekodning2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rekodning/rekodning2/</guid><description>Funktionen ifelse() bruges til at rekode værdier baseret på ét logisk udtryk.
Opbygningen er: ifelse([logisk udtryk], [værdi for sandt], [værdi for falsk])
ess18n &amp;lt;- ess18 |&amp;gt; mutate(health_r = factor(health, levels = c(&amp;#39;Very bad&amp;#39;, &amp;#39;Bad&amp;#39;, &amp;#39;Fair&amp;#39;, &amp;#39;Good&amp;#39;, &amp;#39;Very good&amp;#39;), ordered = TRUE)) |&amp;gt; mutate(healthdum = ifelse(health_r &amp;lt;= &amp;#39;Fair&amp;#39;, &amp;#39;Not good&amp;#39;, &amp;#39;Good&amp;#39;)) |&amp;gt; select(idno, health_r, healthdum) head(ess18n) # A tibble: 6 × 3 idno health_r healthdum &amp;lt;dbl&amp;gt; &amp;lt;ord&amp;gt; &amp;lt;chr&amp;gt; 1 5816 Good Good 2 7251 Fair Not good 3 7887 Fair Not good 4 9607 Good Good 5 11688 Very bad Not good 6 12355 Fair Not good Rekod flere værdier med %in% %in% er et basisudtryk i R, der bruges til at spørge “er denne værdi i denne samling af værdier”?</description></item><item><title>Rekodning baseret på flere udtryk (case_when)</title><link>/rekodning/rekodning3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rekodning/rekodning3/</guid><description>Man kan bruge case_when() at rekode baseret på flere logiske udtryk. For hvert udtryk bruges ~ efterfulgt af en værdi for at angive, hvilken værdi observationerne, der opfylder betiungelsen, skal have. Hvert logisk udtryk adskilles med komma:
nyvar = case_when( betingelse1 ~ &amp;#39;kategori 1&amp;#39;, betingelse2 ~ &amp;#39;kategori 2&amp;#39;, betingelse3 ~ &amp;#39;kategori 3&amp;#39; ) Herunder dannes en kategorisering af selvangivet arbejdstid om ugen (wkhtot), hvor respondenter inddeles efter, hvorvidt de arbejder mindre end 37 timer, 37 timer eller mere end 37 timer om ugen:</description></item></channel></rss>